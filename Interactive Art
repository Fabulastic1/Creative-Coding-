let particles = [];
let sparkles = [];
let stars = [];
let octagons = [];
let textColor;
let backgroundColor;

function preload() {
  font = loadFont('font.ttf');
}

function setup() {
  createCanvas(800, 600);
  textSize(55);
  textAlign(CENTER, CENTER);

  textColor = color(255);
  backgroundColor = color(0);
}

function draw() {
  background(backgroundColor);


  for (let i = 0; i < sparkles.length; i++) {
    sparkles[i].move();
    sparkles[i].display();
  }

  for (let i = 0; i < stars.length; i++) {
    stars[i].move();
    stars[i].display();
  }

  for (let i = 0; i < octagons.length; i++) {
    octagons[i].move();
    octagons[i].display();
  }
  
  for (let i = 0; i < particles.length; i++) {
    particles[i].move();
    particles[i].display();
  }

  fill(textColor);
  text("Welcome to Bath Spa University", width / 2, height / 2);
  textFont(font);

  if (mouseIsPressed) {
    addParticles();
    addSparkles();
    addStars();
    addOctagons();
  }

  if (keyIsPressed) {
    changeColors();
  }
}

function addParticles() {
  for (let i = 0; i < 10; i++) {
    particles.push(new Particle(mouseX, mouseY));
  }
}

function addSparkles() {
  for (let i = 0; i < 5; i++) {
    sparkles.push(new Sparkle(mouseX, mouseY));
  }
}

function addStars() {
  for (let i = 0; i < 3; i++) {
    stars.push(new Star(random(width), random(height)));
  }
}

function addOctagons() {
  for (let i = 0; i < 2; i++) {
    octagons.push(new Octagon(random(width), random(height)));
  }
}

function changeColors() {
  if (key === 'r') {
    textColor = color(255, 0, 0);
    backgroundColor = color(0, 0, 0);
  } else if (key === 'g') {
    textColor = color(0, 255, 0);
    backgroundColor = color(0, 0, 0);
  } else if (key === 'b') {
    textColor = color(0, 0, 255);
    backgroundColor = color(0, 0, 0);
  } else if (key === 'w') {
    textColor = color(255);
    backgroundColor = color(0);
  }
}

class Particle {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.vx = random(-5, 5);
    this.vy = random(-5, 5);
    this.size = random(5, 15);
    this.color = color(255, 255, 255);
  }

  move() {
    this.x += this.vx;
    this.y += this.vy;

    if (this.x < 0 || this.x > width) {
      this.vx *= -1;
    }
    if (this.y < 0 || this.y > height) {
      this.vy *= -1;
    }
  }

  display() {
    fill(this.color);
    noStroke();
    ellipse(this.x, this.y, this.size, this.size);
  }
}

class Sparkle {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.size = random(5, 15);
    this.alpha = 255;
    this.color = color(255, 255, 0, this.alpha);
  }

  move() {
    this.y -= 2;
    this.alpha -= 5;
    this.color = color(255, 255, 0, this.alpha);
  }

  display() {
    fill(this.color);
    noStroke();
    ellipse(this.x, this.y, this.size, this.size);
  }
}

class Star {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.size = random(2, 8);
    this.alpha = 255;
    this.color = color(255, 255, 255, this.alpha);
  }

  move() {
    this.y += 1;
    this.alpha -= 2;
    this.color = color(255, 255, 255, this.alpha);

    if (this.y > height) {
      this.y = 0;
      this.x = random(width);
    }
  }

  display() {
    fill(this.color);
    noStroke();
    ellipse(this.x, this.y, this.size, this.size);
  }
}

class Octagon {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.size = random(20, 50);
    this.rotationSpeed = random(-0.05, 0.05);
    this.color = color(random(15), random(255), random(255));
  }

  move() {
    this.x += random(-1, 1);
    this.y += random(-1, 1);
  }

  display() {
    fill(this.color);
    noStroke();
    push();
    translate(this.x, this.y);
    rotate(frameCount * this.rotationSpeed);
    beginShape();
    for (let i = 0; i < 8; i++) {
      let angle = map(i, 0, 8, 0, TWO_PI);
      let x = this.size * cos(angle);
      let y = this.size * sin(angle);
      vertex(x, y);
    }
    endShape(CLOSE);
    pop();
  }
}
